#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE         &kp N1        &kp N2    &kp N3   &kp N4      &kp N5        &kp UP_ARROW     &kp N6         &kp N7     &kp N8     &kp N9   &kp N0            &kp BACKSLASH
&kp MINUS         &kp Q         &kp W     &kp E    &kp R       &kp T         &kp DOWN_ARROW   &kp Y          &kp U      &kp I      &kp O    &kp P             &kp SEMICOLON
&kp EQUAL         &kp A         &kp S     &kp D    &kp F       &kp G         &kp LEFT_ARROW   &kp H          &kp J      &kp K      &kp L    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_CONTROL  &kp Z         &kp X     &kp C    &kp V       &kp B         &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH          &kp SQT
&kp C_MUTE        &kp LEFT_GUI  &kp LALT  &kp TAB  &kp LSHIFT  &kp ESCAPE    &kp ENTER        &kp BACKSPACE  &kp SPACE  &mo 1      &mo 2    &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
            >;

            display-name = "FUNC";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&out OUT_TOG     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4      &trans  &none  &none  &none  &none  &none  &none
&rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_OFF  &rgb_ug RGB_ON    &trans  &none  &none  &none  &none  &none  &none
&none            &none            &bl BL_DEC       &bl BL_INC       &bl BL_OFF       &bl BL_ON         &trans  &none  &none  &none  &none  &none  &none
&soft_off        &sys_reset       &bootloader      &bt BT_CLR       &bt BT_CLR_ALL   &none             &trans  &none  &none  &none  &none  &none  &none
&none            &none            &none            &none            &none            &none             &trans  &none  &none  &none  &none  &none
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "KEYB";
        };
    };
};
